

<main class="card-centrada" @onclick="SeleccionDatosTorneo">
    <div class="card-torneo">
       <img src="@UrlBanner()" alt="Banner Torneo" class="img-banner">
        <section class="info-torneo">

            <div class="logo-container">
             <img src="@UrlLogo()" alt="Logo Torneo" class="img-logo">
            </div>

            <div class="titulo-container">
                <p>@Torneo.Nombre</p>
                <p>Inscripciones hasta: @Torneo.Fecha.AddDays(-1).ToString("dd/MM/yyyy")</p>
            </div>
            @if (Torneo.Suspendido)
            {
                <img src="/imagenes/cartelSuspendido.png" alt="" class="suspendido-imagen">
            }
        </section>

     
    </div>
</main>



@code {
    [Parameter] public TorneoDTO Torneo { get; set; } 
    [Parameter] public EventCallback<int> VisualizarDatosTorneo { get; set; }


    private string UrlBanner() => string.IsNullOrEmpty(Torneo.Banner) ? "/imagenes/default/BannerDefault.png" : $"{Util.URL_BASE_IMAGENES}/{Torneo.Banner}";

    private string UrlLogo() => string.IsNullOrEmpty(Torneo.Logo) ? "/imagenes/default/Pelota_default.png" : $"{Util.URL_BASE_IMAGENES}/{Torneo.Logo}";

    private async Task SeleccionDatosTorneo()
    {
        await VisualizarDatosTorneo.InvokeAsync(Torneo.Id);
    }


}
