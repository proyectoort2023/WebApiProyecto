

<main class="card-centrada" @onclick="SeleccionDatosTorneo">
    <div class="card-torneo">
       <img src="@UrlBanner()" alt="Banner Torneo" class="img-banner">
        <section class="info-torneo">

            <div class="logo-container">
             <img src="@UrlLogo()" alt="Logo Torneo" class="img-logo">
            </div>

            <div class="titulo-container">
                <p>@NombreTorneo</p>
                <p>Inscripciones hasta: @VtoInscripcion</p>
            </div>

            <div class="card-general-between">
                <img src="/imagenes/flecha.png" alt="" >
            </div>

        </section>
    </div>
</main>



@code {
    [Parameter] public int TorneoId { get; set; }
    [Parameter] public string LogoTorneo { get; set; } 
    [Parameter] public string Bannertorneo { get; set; } 
    [Parameter] public string NombreTorneo { get; set; }
    [Parameter] public string VtoInscripcion { get; set; }
    [Parameter] public EventCallback<int> VisualizarDatosTorneo { get; set; }


    private string UrlBanner() => string.IsNullOrEmpty(Bannertorneo) ? "/imagenes/default/BannerDefault.png" : $"{Util.URL_BASE_IMAGENES}/{Bannertorneo}";

    private string UrlLogo() => string.IsNullOrEmpty(LogoTorneo) ? "/imagenes/default/Pelota_default.png" : $"{Util.URL_BASE_IMAGENES}/{LogoTorneo}";

    private async Task SeleccionDatosTorneo()
    {
        await VisualizarDatosTorneo.InvokeAsync(TorneoId);
    }


}
