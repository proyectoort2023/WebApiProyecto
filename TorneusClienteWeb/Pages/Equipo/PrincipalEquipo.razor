@page "/EQUIPO/Principal"
@inject ServicioMenu _servicioMenu
@inject TorneoServicio _servicio_Torneo
@inject UsuarioServicio _servicioUsuario
@inject NotificacionesSignalRService _servicioNotificacionesSignalR
@inject NavigationManager _nav
@inject HubConnection _hubConnection




@if (Torneos != null)
{
    @if (Torneos.Count > 0)
    {
        @foreach (var torneo in Torneos)
        {
            <ItemTorneo Torneo="torneo" VisualizarDatosTorneo="VisualizarDatosTorneo" />
        }
    }
    else
    {
        <h2>Todavia no tiene torneos creados</h2>
    }
}
else
{
    <h2>Cargando...</h2>
}

<EspacioVertical Altura="10vh" />

@code {

    List<MenuItem> menusItems = new();
    List<TorneoDTO> Torneos = null;

    protected async override Task OnInitializedAsync()
    {
        ActualizarMenu();
        ActualizarTorneos();
        await Iniciar();
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        ActualizarMenu();
    }

    private async Task Iniciar()
    {
        if (_hubConnection.State == HubConnectionState.Disconnected)
        {
            await _hubConnection.StartAsync();
        }
    }

    private void ActualizarMenu()
    {
        menusItems = new List<MenuItem>()
        {
            new MenuItem ("Mensajes","fa fa-envelope","/VistaNotificaciones"),
            new MenuItem ("Torneos","fa fa-trophy","/EQUIPO/Principal"),
            new MenuItem ("Gestíones","fas fa-volleyball-ball","/EQUIPO/Gestiones")
        };
        _servicioMenu.ActualizarItems(menusItems);
        _servicioMenu.ActualizarTitulo("Torneos");
        _servicioMenu.ActualizarNavegacionPOP(true, true, "/");
    }

    private async void ActualizarTorneos()
    {
        try
        {
            Torneos = await _servicio_Torneo.ObtenerTorneosVigentes();
            StateHasChanged();
        }
        catch (Exception)
        {
            _nav.NavigateTo("/", true);
        }

    }


    private async Task VisualizarDatosTorneo(int torneoId)
    {
        await _servicio_Torneo.SeleccionTorneo(torneoId);
        _nav.NavigateTo("/VisualizadorTorneo");
    }




}

