@page "/ORGANIZADOR/GestorPlanilleros"
@inject IDialogService _dialogService
@inject ServicioMenu _servicioMenu
@inject AutorizacionPlanillero _servicioAutorizacionPlanillero
@inject UsuarioServicio _servicioUsuario
@inject ISnackbar _snackbar

@if (PlanillerosTorneosGrupos == null){
    <Cargando />
}
else if (PlanillerosTorneosGrupos.Count == 0)
{
    <h3>Le informamos que no tiene autorizaciones agregadas</h3>

}
else
{
    @foreach (var torneo in PlanillerosTorneosGrupos)
    {
        <h4 class="h4-vis-grupos">@torneo.NombreTorneo</h4>

        <ul>
            @foreach (var planillero in torneo.PlanillasTorneos)
            {
                <li class="listaBox">@planillero.NombrePlanillero - @planillero.EmailPlanillero</li>
            }
        </ul>
        <EspacioVertical Altura="15px" />
    }
}



<MudFab Style="@_servicioMenu.ClassFabColor()" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" OnClick="NuevaAutorizacionModal" />

@code {
        List<PlanilleroTorneoGrupo> PlanillerosTorneosGrupos;

    protected async override Task OnInitializedAsync()
    {
        await ActualizarListado();
    }

    private async Task ActualizarListado()
    {
        List<PlanilleroTorneo> planillerosTorneos = await _servicioAutorizacionPlanillero.ListadoPlanillerosAutorizadosOrganizador(_servicioUsuario.ObtenerUsuarioLogueado().Id);

        PlanillerosTorneosGrupos = planillerosTorneos.GroupBy(g => g.NombreTorneo)
                                                     .Select(s => new PlanilleroTorneoGrupo()
                                                         {
                                                             NombreTorneo = s.Key,
                                                             PlanillasTorneos = s.Select(s => s).ToList()
                                                         }).ToList();
    }

    private async Task NuevaAutorizacionModal()
    {
        try
        {
            var result = await _dialogService.Show<EleccionPlanilleroAut>("Agregar nueva autorización a planillero").Result;

            if (result.Canceled) return;

            var planilleroAAgregar = (PlanilleroTorneo)result.Data;

            bool agregado = await _servicioAutorizacionPlanillero.AgregarPlanilleroAutorizado(planilleroAAgregar);

            if (agregado) await ActualizarListado();
        }
        catch (Exception ex)
        {
            _snackbar.Add(ex.Message, Severity.Warning);
        }
       
    }
}
