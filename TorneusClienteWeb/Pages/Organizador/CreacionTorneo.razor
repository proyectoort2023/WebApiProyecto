@page "/ORGANIZADOR/CreacionTorneo"
@inject ServicioMenu _servicioMenu
@inject UsuarioServicio _servicioUsuario
@inject TorneoServicio _servicioTorneo
@inject NavigationManager _nav
@inject ISnackbar _snackbar



<PortadaRegistro NombreImagenBanner="@TorneoParaCreacionDTO.Banner" 
                 NombreImagenLogo="@TorneoParaCreacionDTO.Logo" 
                 SubirImagen="ActualizarImagen"
                 ModoEdicion="true"/>

 <EspacioVertical Altura="15px" />
<div>

    <EditForm Model="@TorneoParaCreacionDTO" OnValidSubmit="Registrar">
        <DataAnnotationsValidator />

            <MudDatePicker Label="Fecha de torneo" TitleDateFormat="dd/MM/yyyy" @bind-Date="fechaTorneo" For="(()=> fechaTorneo)" Validation="ValidarFecha" />
                  <EspacioVertical Altura="7px" />  
            <MudTimePicker Label="Hora de inicio" @bind-Time="horaComienzo" />
        <EspacioVertical Altura="@espaciado" />

        <MudTextField @bind-Value="TorneoParaCreacionDTO.Nombre"
                      Label="Nombre del torneo"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      For="@(() => TorneoParaCreacionDTO.Nombre)" />
        <EspacioVertical Altura="@espaciado" />

        <MudTextField @bind-Value="TorneoParaCreacionDTO.Lugar"
                      Label="Lugar de encuentro y dirección"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      For="@(() => TorneoParaCreacionDTO.Lugar)" />
        <EspacioVertical Altura="@espaciado" />
    
        <div class="dosEnLinea">
            <MudTextField @bind-Value="TorneoParaCreacionDTO.NombreContacto"
                      Label="Nombre de contacto"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      Style="width:95%"
                      For="@(() => TorneoParaCreacionDTO.NombreContacto)" />
            <EspacioVertical Altura="@espaciado" />

        <MudTextField @bind-Value="TorneoParaCreacionDTO.TelContacto"
                        Label="Celular"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"
                        For="@(() => TorneoParaCreacionDTO.TelContacto)" />

     </div>
        <EspacioVertical Altura="@espaciado" />
        <div class="dosEnLinea">
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.Precio" 
                                Label="Precio" 
                                Variant="Variant.Outlined" 
                                For="(() => TorneoParaCreacionDTO.Precio)"
                                Style="width:95%" />
            <EspacioVertical Altura="@espaciado" />
            <MudSelect @bind-Value="@TorneoParaCreacionDTO.TipoPrecio"
                       Label="Elegir tipo de precio"
                       Variant="Variant.Outlined"
                       For="@(() => TorneoParaCreacionDTO.TipoPrecio)">
                @foreach (var tipoPrecio in Util.TipoPrecioDiccionario)
                {
                    <MudSelectItem Value="tipoPrecio.Value"> @tipoPrecio.Key </MudSelectItem>
                }
            </MudSelect>
        </div>
        <EspacioVertical Altura="@espaciado" />
        <MudSelect @bind-Value="@TorneoParaCreacionDTO.ConfiguracionEquipos"
                   Label="Elegir configuración de equipos"
                   Variant="Variant.Outlined"
                   For="@(() => TorneoParaCreacionDTO.ConfiguracionEquipos)">
            @foreach (var configEquipo in Util.ConfigEquiposDiccionario)
            {
                <MudSelectItem Value="configEquipo.Key"> @configEquipo.Value </MudSelectItem>
            }
        </MudSelect>
        <EspacioVertical Altura="@espaciado" />

        <GrupoBotones ActualizarSetsMax="ActualizarSetsMax"  SetsMaxActual="@TorneoParaCreacionDTO.SetsMax"/>

        <EspacioVertical Altura="@espaciado" />
        <div class="dosEnLinea">
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.PuntajeMax" 
                                Label="Puntaje máximo" 
                                Variant="Variant.Outlined"
                             For="(() => TorneoParaCreacionDTO.PuntajeMax)"
                                Style="width:95%" />
            <EspacioVertical Altura="@espaciado" />
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.PuntajeMaxUltimoSet"
                             Label="Puntaje máximo último set"
                             Variant="Variant.Outlined"
                             For="(() => TorneoParaCreacionDTO.PuntajeMaxUltimoSet)" />
        </div>
        <EspacioVertical Altura="@espaciado" />
        <div class="dosEnLinea">
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.MaxEquiposInscriptos"
                             Label="Limite equipos inscriptos"
                             Variant="Variant.Outlined"
                             For="(() => TorneoParaCreacionDTO.MaxEquiposInscriptos)"
                             Style="width:95%" />
            <EspacioVertical Altura="@espaciado" />
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.MaxJugadoresPorEquipo"
                             Label="Jugadores máx por equipo"
                             Variant="Variant.Outlined"
                             For="(() => TorneoParaCreacionDTO.MaxJugadoresPorEquipo)" />
        </div>
        <EspacioVertical Altura="@espaciado" />
        <div class="dosEnLinea">
            <MudNumericField @bind-Value="TorneoParaCreacionDTO.CantidadCanchas"
                             Label="Cantidad de canchas"
                             Variant="Variant.Outlined"
                             For="(() => TorneoParaCreacionDTO.CantidadCanchas)"
                             Style="width:95%" />
            <EspacioVertical Altura="@espaciado" />
            <MudSwitch  @bind-Checked="@TorneoParaCreacionDTO.Indoor"
                       ThumbIcon="@(TorneoParaCreacionDTO.Indoor==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)"
                       ThumbIconColor="@(TorneoParaCreacionDTO.Indoor==true ? Color.Success : Color.Error)"
                       Label="@(TorneoParaCreacionDTO.Indoor==true ? "En local techado" : "Al aire libre")"
                       Color="Color.Primary" 
                       UnCheckedColor="Color.Primary"
                       Size="Size.Large" />
        </div>

        <MudTextField T="string" Label="Otras observaciones" 
                                Variant="Variant.Outlined" 
                                Text="@TorneoParaCreacionDTO.Otros" 
                                Lines="5" MaxLength="299"
                                TextChanged="CambioTextoAreaControl" />
     
        <EspacioVertical Altura="20px" />
        <div class="center-container-login">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Crear torneo</MudButton>
        </div>

        </EditForm>
    </div>

    <EspacioVertical Altura="100px" />


@code {

    public TorneoCreacionDTO TorneoParaCreacionDTO = new TorneoCreacionDTO();
    TimeSpan? horaComienzo = new TimeSpan(10, 00, 00);
    DateTime? fechaTorneo = DateTime.Today.Date;

    private string espaciado = "10px";


    protected async override Task OnInitializedAsync()
    {
        _servicioMenu.ActualizarNavegacionPOP(true, false, "/ORGANIZADOR/Principal");
        _servicioMenu.ActualizarTitulo("Crear Torneo");
        ValoresPorDefectoTorneo();
    }

    private void ValoresPorDefectoTorneo()
    {
        TorneoParaCreacionDTO.Indoor = true;
        TorneoParaCreacionDTO.SetsMax = 1;
    }
    private string ValidarFecha(DateTime? fecha)
    {
        if (fecha == null) return "La fecha es requerida.";

        if (fecha < DateTime.Today) return "La fecha debe ser mayor a hoy.";

        // Realizar validaciones adicionales si es necesario

        return string.Empty; // La fecha es válida
    }

    private async Task ActualizarImagen(ImagenDTO tipoImagenUrl)
    {
        if (tipoImagenUrl.TipoImagenSubida == Util.TipoImagen.BANNER.ToString())
        {
            TorneoParaCreacionDTO.Banner = tipoImagenUrl.UrlImagen;
        }
        if (tipoImagenUrl.TipoImagenSubida == Util.TipoImagen.LOGO.ToString())
        {
            TorneoParaCreacionDTO.Logo = tipoImagenUrl.UrlImagen;
        }
        //StateHasChanged();
    }


    private async Task Registrar()
    {
        try
        {
            TorneoParaCreacionDTO.UsuarioId = _servicioUsuario.ObtenerUsuarioLogueado().Id;
            TorneoParaCreacionDTO.Fecha = fechaTorneo.Value.Date;
            TorneoParaCreacionDTO.HoraComienzo = fechaTorneo.Value.Date.Add(horaComienzo.Value);
            var torneoNuevo = await _servicioTorneo.CrearTorneoOrganizador(TorneoParaCreacionDTO);
            int idOrganizador = _servicioUsuario.ObtenerUsuarioLogueado().Id;
            await _servicioTorneo.ListadoTorneosOrganizadorData(idOrganizador);
            _nav.NavigateTo("/ORGANIZADOR/Principal");
        }
        catch (Exception ex)
        {
            _snackbar.Add(ex.Message, Severity.Warning);
        }

    }

    private async Task ActualizarSetsMax(int numeroSets)
    {
        TorneoParaCreacionDTO.SetsMax = numeroSets;
    }

    private void CambioTextoAreaControl(string texto)
    {
        TorneoParaCreacionDTO.Otros = texto;
    }


}
